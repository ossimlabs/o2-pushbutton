{
  "apiVersion": "v1",
  "kind": "Template",
  "metadata": {
    "name": "nifi-cluster"
  },
  "labels": {
    "template": "nifi-cluster"
  },
  "parameters": [
    {
      "description": "",
      "displayName": "",
      "name": "DOCKER_IMAGE_REPO",
      "value": "quay.io/radiantsolutions"
    },
    {
      "description": "",
      "displayName": "",
      "name": "APP_NAME",
      "value": "nifi-cluster"
    },
    {
      "name": "DEPLOYMENT_TARGET",
      "displayName": "DEPLOYMENT_TARGET",
      "description": "Deployment target (omar-dev, etc.)",
      "required": true,
      "value": "omar-dev"
    },
    {
      "name": "OPENSHIFT_DOCKER_REGISTRY_URL",
      "displayName": "OPENSHIFT_DOCKER_REGISTRY_URL",
      "description": "Openshift Docker Registry URL",
      "required": true,
      "value": "docker-registry.default.svc:5000"
    },
    {
      "name": "NIFI_TAG",
      "displayName": "NIFI_TAG",
      "description": "Docker Container Image Version Tag",
      "required": true,
      "value": "1.9.2"
    },
    {
      "name": "ZOOKEEPER_TAG",
      "displayName": "ZOOKEEPER_TAG",
      "description": "Docker Container Image Version Tag",
      "required": true,
      "value": "3.5.5"
    },
    {
      "name": "OSSIM_DATA_PV_NAME",
      "displayName": "OSSIM_DATA_PV_NAME",
      "description": "Persistent volume storage base name",
      "required": true,
      "value": "ossim-data-dev"
    },
    {
      "name": "REPLICAS",
      "displayName": "REPLICAS",
      "description": "Number of nifi replicas to deploy",
      "required": true,
      "value": "3"
    },
    {
      "name": "NIFI_IMAGE_NAME",
      "displayName": "NIFI_IMAGE_NAME",
      "description": "The name of the docker image to pull",
      "value": "nifi"
    },
    {
      "name": "ZOOKEEPER_IMAGE_NAME",
      "displayName": "ZOOKEEPER_IMAGE_NAME",
      "description": "The name of the docker image to pull",
      "value": "zookeeper"
    },
    {
      "name": "INSECURE_REPOSITORY",
      "displayName": "INSECURE_REPOSITORY",
      "description": "Mark the image stream as an insecure repository",
      "value": "false"
    },
    {
      "name": "MEMORY_MAX",
      "displayName": "MEMORY_MAX",
      "description": "Maximum memory for this app to have",
      "value": "1000Mi"
    },
    {
      "name": "JAVA_OPTS",
      "displayName": "JAVA_OPTS",
      "description": "Desired value for the JAVA_OPTS environment variable",
      "value": "-server -Xms256m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1 -XX:+CMSClassUnloadingEnabled -XX:+UseGCOverheadLimit -Djava.awt.headless=true -XshowSettings:vm -Djava.security.egd=file:/dev/./urandom"
    }
  ],
  "objects": [
    {
      "apiVersion": "apps/v1",
      "kind": "StatefulSet",
      "metadata": {
        "name": "nifi-cluster",
        "namespace": "${DEPLOYMENT_TARGET}",
        "labels": {
          "app": "nifi"
        }
      },
      "spec": {
        "serviceName": "nifi",
        "replicas": "${REPLICAS}",
        "selector": {
          "matchLabels": {
            "app": "nifi"
          }
        },
        "template": {
          "metadata": {
            "labels": {
              "app": "nifi"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "volume-nifi",
                "persistentVolumeClaim": {
                  "claimName": "${OSSIM_DATA_PV_NAME}-pvc"
                }
              },
              {
                "name": "start-script",
                "configMap": {
                  "name": "nifi-start-script",
                  "items": [
                    {
                      "key": "nifi-start.sh",
                      "path": "nifi-start.sh"
                    }
                  ]
                }
              }
            ],
            "containers": [
              {
                "name": "nifi-cluster",
                "image": "apache/nifi:${NIFI_TAG}",
                "imagePullPolicy": "Always",
                "command": ["bash", "/opt/nifi/scripts/special/nifi-start.sh"],
                "env": [
                  {
                    "name": "NIFI_WEB_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "NIFI_CLUSTER_IS_NODE",
                    "value": "true"
                  },
                  {
                    "name": "NIFI_CLUSTER_NODE_PROTOCOL_PORT",
                    "value": "8082"
                  },
                  {
                    "name": "NIFI_ZK_CONNECT_STRING",
                    "value": "zookeeper:2181"
                  },
                  {
                    "name": "NIFI_ELECTION_MAX_WAIT",
                    "value": "30 secs"
                  },
                  {
                    "name": "JAVA_OPTS",
                    "value": "${JAVA_OPTS}"
                  }
                ],
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "web",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8081,
                    "name": "custom",
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "requests": {
                    "memory": "${MEMORY_MAX}"
                  },
                  "limits": {
                    "memory": "${MEMORY_MAX}"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "volumeMounts": [
                  {
                    "mountPath": "/data",
                    "name": "volume-nifi"
                  },
                  {
                    "mountPath": "/opt/nifi/scripts/special/",
                    "name": "start-script"
                  }
                ]
              }
            ]
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "annotations": {
          "openshift.io/generated-by": "OpenShiftNewApp"
        },
        "creationTimestamp": null,
        "generation": 320,
        "name": "zookeeper",
        "namespace": "${DEPLOYMENT_TARGET}",
        "labels": {
          "app": "zookeeper"
        }
      },
      "spec": {
        "serviceName": "zookeeper",
        "replicas": "1",
        "selector": {
          "app": "zookeeper"
        },
        "strategy": {
          "resources": {},
          "type": "Recreate"
        },
        "template": {
          "metadata": {
            "annotations": {
              "openshift.io/generated-by": "OpenShiftNewApp"
            },
            "creationTimestamp": null,
            "labels": {
              "app": "zookeeper"
            }
          },
          "spec": {
            "containers": [
              {
                "env": [
                  {
                    "name": "ALLOW_ANONYMOUS_LOGIN",
                    "value": "yes"
                  }
                ],
                "image": "${OPENSHIFT_DOCKER_REGISTRY_URL}/${DEPLOYMENT_TARGET}/zookeeper:${TAG}",
                "imagePullPolicy": "Always",
                "livenessProbe": {
                  "failureThreshold": 5,
                  "initialDelaySeconds": 600,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "tcpSocket": {
                    "port": 2181
                  },
                  "timeoutSeconds": 3
                },
                "name": "zookeeper",
                "ports": [
                  {
                    "containerPort": 2181,
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 2181,
                    "protocol": "UDP"
                  },
                  {
                    "containerPort": 2888,
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 3888,
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 60,
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "tcpSocket": {
                    "port": 2181
                  },
                  "timeoutSeconds": 3
                },
                "resources": {
                  "requests": {
                    "memory": "${MEMORY_MAX}"
                  },
                  "limits": {
                    "memory": "${MEMORY_MAX}"
                  }
                },
                "securityContext": {
                  "runAsUser": 1000
                },
                "terminationMessagePath": "/dev/termination-log",
                "volumeMounts": []
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "restartPolicy": "Always",
            "securityContext": {},
            "terminationGracePeriodSeconds": 30,
            "volumes": []
          }
        },
        "test": false,
        "triggers": [
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "zookeeper"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "zookeeper:${ZOOKEEPER_TAG}",
                "namespace": "${DEPLOYMENT_TARGET}"
              }
            },
            "type": "ImageChange"
          },
          {
            "type": "ConfigChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "name": "nifi",
        "namespace": "${DEPLOYMENT_TARGET}"
      },
      "spec": {
        "type": "ClusterIP",
        "ports": [
          {
            "name": "8080-tcp",
            "port": 8080,
            "protocol": "TCP",
            "targetPort": 8080
          }
        ],
        "selector": {
          "app": "nifi"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "name": "zookeeper",
        "namespace": "${DEPLOYMENT_TARGET}"
      },
      "spec": {
        "type": "ClusterIP",
        "ports": [
          {
            "name": "2181-tcp",
            "port": 2181,
            "protocol": "TCP",
            "targetPort": 2181
          },
          {
            "name": "2181-udp",
            "port": 2181,
            "protocol": "UDP",
            "targetPort": 2181
          },
          {
            "name": "2888-tcp",
            "port": 2888,
            "protocol": "TCP",
            "targetPort": 2888
          },
          {
            "name": "3888-tcp",
            "port": 3888,
            "protocol": "TCP",
            "targetPort": 3888
          },
          {
            "name": "8080-tcp",
            "port": 8080,
            "protocol": "TCP",
            "targetPort": 8080
          }
        ],
        "selector": {
          "app": "zookeeper"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ImageStream",
      "metadata": {
        "name": "zookeeper",
        "namespace": "${DEPLOYMENT_TARGET}",
        "labels": {
          "application": "test"
        },
        "annotations": {
          "openshift.io/image.insecureRepository": "${INSECURE_REPOSITORY}"
        }
      },
      "spec": {
        "lookupPolicy": {
          "local": false
        },
        "tags": [
          {
            "annotations": null,
            "from": {
              "kind": "DockerImage",
              "name": "${ZOOKEEPER_IMAGE_NAME}:${ZOOKEEPER_TAG}"
            },
            "importPolicy": {
              "scheduled": true,
              "insecure": "${{INSECURE_REPOSITORY}}"
            },
            "name": "${ZOOKEEPER_TAG}",
            "referencePolicy": {
              "type": "Source"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "labels": {
          "app": "nifi"
        },
        "name": "nifi-start-script",
        "namespace": "${DEPLOYMENT_TARGET}"
      },
      "data": {
        "nifi-start.sh": "#!/bin/bash\nexport HOSTNAME=${HOSTNAME}.nifi\n/opt/nifi/scripts/start.sh"
      }
    }
  ]
}
