{
    "apiVersion": "v1",
    "kind": "Template",
    "metadata": {
        "name": "nifi-cluster"
    },
    "labels": {
        "template": "nifi-cluster"
    },
    "parameters": [
        {
            "name": "DEPLOYMENT_TARGET",
            "displayName": "DEPLOYMENT_TARGET",
            "description": "",
            "required": true,
            "value": "dev"
          },
          {
            "name": "OSSIM_DATA_PV_NAME",
            "displayName": "OSSIM_DATA_PV_NAME",
            "description": "Persistent volume storage base name",
            "required": true,
            "value": "ossim-data"
          }
    ],
    "objects": [
        {
            "kind": "ConfigMap",
            "apiVersion": "v1",
            "data": {
                "nifi-start.sh": "export HOSTNAME=${HOSTNAME}.nifi\nmkdir -p /opt/nifi/nifi-current/conf/special/\ncp /data/nifi-conf/conf/flow.xml.gz /opt/nifi/nifi-current/conf/special/flow.xml.gz\nsed -i 's:flow.xml.gz:special/flow.xml.gz:g' /opt/nifi/nifi-current/conf/nifi.properties\n/opt/nifi/scripts/start.sh\n"
            },
            "metadata": {
                "namespace": "${DEPLOYMENT_TARGET}",
                "creationTimestamp": "2019-11-02T14:17:37Z",
                "name": "nifi-start-script"
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "namespace": "${DEPLOYMENT_TARGET}",
                "name": "nifi",
                "labels": {
                    "app": "nifi"
                }
            },
            "spec": {
                "ports": [
                    {
                        "port": 8080,
                        "name": "web"
                    }
                ],
                "clusterIP": "None",
                "selector": {
                    "app": "nifi"
                }
            }
        },
        {
            "kind": "StatefulSet",
            "apiVersion": "apps/v1",
            "metadata": {
                "namespace": "${DEPLOYMENT_TARGET}",
                "labels": {
                    "app": "nifi"
                },
                "name": "nifi-cluster"
            },
            "spec": {
                "serviceName": "nifi",
                "replicas": 3,
                "selector": {
                    "matchLabels": {
                        "app": "nifi"
                    }
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "app": "nifi"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "volume-nifi",
                                "persistentVolumeClaim": {
                                    "claimName": "${OSSIM_DATA_PV_NAME}-pvc"
                                }
                            },
                            {
                                "name": "start-script",
                                "configMap": {
                                    "name": "nifi-start-script",
                                    "items": [
                                        {
                                            "key": "nifi-start.sh",
                                            "path": "nifi-start.sh"
                                        }
                                    ]
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "nifi",
                                "image": "apache/nifi:1.9.2",
                                "imagePullPolicy": "Always",
                                "resources": {},
                                "command": [
                                    "bash",
                                    "/opt/nifi/scripts/special/nifi-start.sh"
                                ],
                                "env": [
                                    {
                                        "name": "JAVA_OPTS",
                                        "value": "-server -Xms256m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1 -XX:+CMSClassUnloadingEnabled -XX:+UseGCOverheadLimit -Djava.awt.headless=true -XshowSettings:vm -Djava.security.egd=file:/dev/./urandom"
                                    },
                                    {
                                        "name": "NIFI_WEB_HTTP_PORT",
                                        "value": "8080"
                                    },
                                    {
                                        "name": "NIFI_CLUSTER_IS_NODE",
                                        "value": "true"
                                    },
                                    {
                                        "name": "NIFI_CLUSTER_NODE_PROTOCOL_PORT",
                                        "value": "8082"
                                    },
                                    {
                                        "name": "NIFI_ZK_CONNECT_STRING",
                                        "value": "zookeeper:2181"
                                    },
                                    {
                                        "name": "NIFI_ELECTION_MAX_WAIT",
                                        "value": "30 sec"
                                    }
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "web",
                                        "protocol": "TCP"
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "name": "volume-nifi",
                                        "mountPath": "/data"
                                    },
                                    {
                                        "name": "start-script",
                                        "mountPath": "/opt/nifi/scripts/special/"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "namespace": "${DEPLOYMENT_TARGET}",
                "name": "zookeeper",
                "labels": {
                    "app": "zookeeper"
                }
            },
            "spec": {
                "ports": [
                    {
                        "port": 8080,
                        "name": "web"
                    }
                ],
                "clusterIP": "None",
                "selector": {
                    "app": "zookeeper"
                }
            }
        },
        {
            "apiVersion": "apps.openshift.io/v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "namespace": "${DEPLOYMENT_TARGET}",
                "labels": {
                    "app": "zookeeper"
                },
                "name": "zookeeper"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "app": "zookeeper",
                    "deploymentconfig": "zookeeper"
                },
                "strategy": {
                    "activeDeadlineSeconds": 21600,
                    "resources": {},
                    "rollingParams": {
                        "intervalSeconds": 1,
                        "maxSurge": "25%",
                        "maxUnavailable": "25%",
                        "timeoutSeconds": 600,
                        "updatePeriodSeconds": 1
                    },
                    "type": "Rolling"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "openshift.io/generated-by": "OpenShiftWebConsole"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "zookeeper",
                            "deploymentconfig": "zookeeper"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "ALLOW_ANONYMOUS_LOGIN",
                                        "value": "yes"
                                    }
                                ],
                                "image": "quay.io/radiantsolutions/zookeeper",
                                "imagePullPolicy": "Always",
                                "name": "zookeeper",
                                "ports": [
                                    {
                                        "containerPort": 2181,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 2888,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 3888,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30
                    }
                },
                "triggers": [
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        }
    ]
}
