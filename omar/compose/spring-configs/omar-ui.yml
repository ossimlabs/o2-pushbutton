---
server:
  contextPath: /omar-ui

omar:
  openlayers:
    baseMaps:
      -
        layerType: "tilewms"
        title: "OSM Basic"
        url: "${serverProtocol}://${serverName}/omar-mapproxy/service"
        params:
          layers: "o2-basemap-basic"
          format: "image/jpeg"
        options:
          visible: true
    # Uncomment the example below, and modify to add
    # a custom overlay layer
    # overlayLayers:
    #   -
    #     layerType: "tilewms"
    #     title: "DGI"
    #     url: "${serverProtocol}://${serverName}/geoscript-app/evwhs/wms"
    #     params:
    #       filter: ""
    #       version: "1.3.0"
    #       layers: ""
    #       styles: ""
    #       format: "image/png"
    #     options:
    #       visible: false
    zoomFilterChangeLevel: 10

  app:
    userInfo:
      requestHeaderUserName: username
      requestHeaderUserNameDefault: Anonymous
    footprints:
      params: # misc params for the wfs request
        name: "Image Footprints"
        version: '1.1.1'
        layers: 'omar:raster_entry'
        styles: 'byFileType'
#        styles: 'bySensorType'
#        styles: 'byMissionType'
        format: 'image/gif'
    apiApp:
      baseUrl: http://localhost:8081/api
      enabled: false
    isaApp:
      enabled: false
    tlvApp:
      enabled: true
    twofishes:
      baseUrl: ${serverProtocol}://${serverName}/twofishes
      proxy: /twoFishesProxy
    kmlApp:
      enabled: true
    jpipApp:
      enabled: true
    piwikApp:
      enabled: false
    userGuide:
      baseUrl: ${serverProtocol}://${serverName}/omar-docs/
      enabled: true
    sites:
        -
          info:
              name: OMAR-DEV
              description: OMAR Development Server (Unclassified)
          url:
              base: ${serverProtocol}://${serverName}
    misc:
      javascriptDebug: true
      splashModal:
        header: "O2 Notice"
        message: "Welcome to the O2 image discovery and analysis application."
        delay: 1000
        enabled: false
      # ------------------------------------------------------------------
      # Added the mapInfoMessage block below on 11/26/18
      # TODO: Make sure this is added to the highside configuration
      # ------------------------------------------------------------------
      # Configurable message that opens when accessing the map
      #mapInfoMessage:
        # Map information header text
        #header: "<h4>Check out what's new!</h4>"
        # Map information body text.  You can embed HTML in the message for formatting.
        #message: "<h5>Auto-mosaic layer</h5><ol><li>Zoom in to an area of the map (scale should be 5km or less)</li>  <li>Hover over the layer selector button in the map (top-right hand corner)</li> <li>Choose 'Auto' under mosaics</li>"
        # The timeout before the mapInfo message disappears
        #timeOut: 20000
        # A progress bar to see the mapInfo message timeout in real time
        #progressBar: true
        # The timeout after you hover the mapInfoMessage
        #extendedTimeOut: 15000
        # Used to enable/disable the map info message from displaying
        #enabled: true
      beLookupEnabled: false
      #placemarks:
      #  tableName: omar:cities
      #  columnName: city_name
      #  geomName: geom
      #  maxResults: 100
      icons:
        greenMarker: assets/search_marker_green.png
      listRefreshButtonVisible: true
      totalPaginationCount: 1000
      pageLimit: 10
      motd:
        message: "Welcome to OMAR Pushbutton"
        enabled: true
      about:
        releaseName: ${releaseName}
        releaseNumber: ${releaseNumber}
      metrics: # Metrics Dropdown Menu settings
        enabled: false
        admin:
          enabled: true # hide/show the Metrics Admin section
          hystrixTurbine: # The baseUrl below is a placeholder until we get Hystrix and Turbine working
            baseUrl: https://medium.com/netflix-techblog/hystrix-dashboard-turbine-stream-aggregator-60985a2e51df
            enabled: true
          sleuthZipkin: # The baseUrl below is a placeholder until we get Sleuth and Zipkin working
            baseUrl: https://spring.io/blog/2016/02/15/distributed-tracing-with-spring-cloud-sleuth-and-spring-cloud-zipkin
            enabled: true
          kibana:
            baseUrl: https://kibana.${serverDomain}
            enabled: true
          springBootAdmin:
            baseUrl: ${serverProtocol}://${serverName}/omar-admin-server/#/
            enabled: true #http://omar-dev.${serverDomain}/omar-admin-server/login.html
        user:
          enabled: true # hide/show the Metrics Admin section
          eureka:
            baseUrl: ${serverProtocol}://${serverName}/omar-eureka-server
            enabled: true

---
environments:
  production:
    dataSource:
      pooled: true
      jmxExport: true
      driverClassName: ${omarDb.driver}
      dialect:   ${omarDb.dialect}
      url:      ${omarDb.url}
      username: ${omarDb.username}
      password: ${omarDb.password}
