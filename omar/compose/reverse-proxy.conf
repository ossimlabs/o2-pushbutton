##################################
# o2 Openshift Proxy configurations
##################################

ProxyPreserveHost On

Redirect /ngt-service /ngt-service/
ProxyPass /ngt-service/ http://ngt-service:8080/ngt-service/
ProxyPassReverse /ngt-service/ http://ngt-service:8080/ngt-service/

ProxyPass /omar http://omar-oldmar-app:8080/omar
ProxyPassReverse /omar http://omar-oldmar-app:8080/omar

ProxyPass /omar-admin-server http://omar-admin-server:8080/omar-admin-server
ProxyPassReverse /omar-admin-server http://omar-admin-server:8080/omar-admin-server

Redirect /omar-cesium-terrain-builder /omar-cesium-terrain-builder/
ProxyPass /omar-cesium-terrain-builder/ http://omar-cesium-terrain-buil:8080/omar-cesium-terrain-builder/
ProxyPassReverse /omar-cesium-terrain-builder/ http://omar-cesium-terrain-buil:8080/omar-cesium-terrain-builder/

Redirect /omar-cesium-terrain-server /omar-cesium-terrain-server/
ProxyPass /omar-cesium-terrain-server/ http://omar-cesium-terrain-serv:8000/
ProxyPassReverse /omar-cesium-terrain-server/ http://omar-cesium-terrain-serv:8000/

Redirect /omar-cucumber-backend-test /omar-cucumber-backend-test/
ProxyPass /omar-cucumber-backend-test/ http://omar-cucumber-backend-test:8080/
ProxyPassReverse /omar-cucumber-backend-test/ http://omar-cucumber-backend-test:8080/

Redirect /omar-cucumber-frontend-test /omar-cucumber-frontend-test/
ProxyPass /omar-cucumber-frontend-test/ http://omar-cucumber-frontend-test:8080/
ProxyPassReverse /omar-cucumber-frontend-test/ http://omar-cucumber-frontend-test:8080/

Redirect /omar-cucumber-ingest-test /omar-cucumber-ingest-test/
ProxyPass /omar-cucumber-ingest-test/ http://omar-cucumber-ingest-test:8080/
ProxyPassReverse /omar-cucumber-ingest-test/ http://omar-cucumber-ingest-test:8080/

Redirect /omar-docs /omar-docs/
ProxyPass /omar-docs/ http://omar-docs-app:80/omar-docs/
ProxyPassReverse /omar-docs/ http://omar-docs-app:80/omar-docs/

Redirect /omar-download /omar-download/
ProxyPass /omar-download/ http://omar-download-app:8080/omar-download/
ProxyPassReverse /omar-download/ http://omar-download-app:8080/omar-download/

Redirect /omar-upload /omar-upload/
ProxyPass /omar-upload/ http://omar-upload-app:8080/omar-upload/
ProxyPassReverse /omar-upload/ http://omar-upload-app:8080/omar-upload/

# Testing
Redirect /blink /blink/
ProxyPass /blink/ http://omar-blink:8080/blink/
ProxyPassReverse /blink/ http://omar-blink:8080/blink/

Redirect /omar-dropbox-sqs /omar-dropbox-sqs/
ProxyPass /omar-dropbox-sqs/ http://omar-dropbox-sqs-app:8080/omar-dropbox-sqs/
ProxyPassReverse /omar-dropbox-sqs/ http://omar-dropbox-sqs-app:8080/omar-dropbox-sqs/

# Added this new line at version 2.5.1 by A.Drake
Redirect /omar-eureka-server /omar-eureka-server/
ProxyPass /omar-eureka-server/ http://omar-eureka-server:8761/omar-eureka-server/
ProxyPassReverse /omar-eureka-server/ http://omar-eureka-server:8761/omar-eureka-server/

Redirect /omar-geoscript /omar-geoscript/
ProxyPass /omar-geoscript/ http://omar-geoscript-app:8080/omar-geoscript/
ProxyPassReverse /omar-geoscript/ http://omar-geoscript-app:8080/omar-geoscript/

Redirect /omar-git-mirror /omar-git-mirror/
ProxyPass /omar-git-mirror/ http://omar-git-mirror-app:8080/omar-git-mirror/
ProxyPassReverse /omar-git-mirror/ http://omar-git-mirror-app:8080/omar-git-mirror/

ProxyPass /omar-jpip http://omar-jpip-app:8080/omar-jpip
ProxyPassReverse /omar-jpip http://omar-jpip-app:8080/omar-jpip

Redirect /omar-mensa /omar-mensa/
ProxyPass /omar-mensa/ http://omar-mensa-app:8080/omar-mensa/
ProxyPassReverse /omar-mensa/ http://omar-mensa-app:8080/omar-mensa/

RedirectMatch ^/$ /omar-ui/omar#/map
Redirect /omar-ui /omar-ui/
ProxyPass /omar-ui/ http://omar-ui-app:8080/omar-ui/
ProxyPassReverse /omar-ui/ http://omar-ui-app:8080/omar-ui/

Redirect /omar-task-trigger /omar-task-trigger/
ProxyPass /omar-task-trigger/ http://omar-task-trigger:8080/taskTrigger/
ProxyPassReverse /omar-task-trigger/ http://omar-task-trigger:8080/taskTrigger/

# Added this new line at version 2.5.1 by A.Drake
Redirect /omar-services-monitor /omar-services-monitor/
ProxyPass /omar-services-monitor/ http://omar-services-monitor-app:8080/omar-services-monitor/
ProxyPassReverse /omar-services-monitor/ http://omar-services-monitor-app:8080/omar-services-monitor/

Redirect /omar-sqs-stager /omar-sqs-stager/
ProxyPass /omar-sqs-stager/ http://omar-sqs-stager-app:8080/omar-sqs-stager/
ProxyPassReverse /omar-sqs-stager/ http://omar-sqs-stager-app:8080/omar-sqs-stager/

Redirect /omar-stager /omar-stager/
ProxyPass /omar-stager/ http://omar-stager-app:8080/omar-stager/
ProxyPassReverse /omar-stager/ http://omar-stager-app:8080/omar-stager/

Redirect /omar-streetview /omar-streetview/
ProxyPass /omar-streetview/ http://omar-streetview-app:8080/omar-streetview/
ProxyPassReverse /omar-streetview/ http://omar-streetview-app:8080/omar-streetview/

Redirect /omar-superoverlay /omar-superoverlay/
ProxyPass /omar-superoverlay/ http://omar-superoverlay-app:8080/omar-superoverlay/
ProxyPassReverse /omar-superoverlay/ http://omar-superoverlay-app:8080/omar-superoverlay/

Redirect /omar-wcs /omar-wcs/
ProxyPass /omar-wcs/ http://omar-wcs-app:8080/omar-wcs/
ProxyPassReverse /omar-wcs/ http://omar-wcs-app/omar-wcs/

Redirect /omar-wfs /omar-wfs/
ProxyPass /omar-wfs/ http://omar-wfs-app:8080/omar-wfs/
ProxyPassReverse /omar-wfs/ http://omar-wfs-app:8080/omar-wfs/

Redirect /omar-wms /omar-wms/
ProxyPass /omar-wms/ http://omar-wms-app:8080/omar-wms/
ProxyPassReverse /omar-wms/ http://omar-wms-app:8080/omar-wms/

Redirect /omar-oms /omar-oms/
ProxyPass /omar-oms/ http://omar-oms-app:8080/omar-oms/
ProxyPassReverse /omar-oms/ http://omar-oms-app:8080/omar-oms/

Redirect /omar-wmts /omar-wmts/
ProxyPass /omar-wmts/ http://omar-wmts-app:8080/omar-wmts/
ProxyPassReverse /omar-wmts/ http://omar-wmts-app:8080/omar-wmts/

Redirect /service-proxy /service-proxy/
ProxyPass /service-proxy/ http://omar-service-proxy-app:8080/service-proxy/
ProxyPassReverse /service-proxy/ http://omar-service-proxy-app:8080/service-proxy/

Redirect /tlv /tlv/
ProxyPass /tlv/ http://tlv-app:8080/tlv/
ProxyPassReverse /tlv/ http://tlv-app:8080/tlv/

Redirect /twofishes /twofishes/
ProxyPass /twofishes/ http://omar-twofishes:8081/
ProxyPassReverse /twofishes/ http://omar-twofishes:8081/

Redirect /gmt-offset-service /gmt-offset-service/
ProxyPass /gmt-offset-service/ http://gmt-offset-service:8000/gmt-offset/
ProxyPassReverse /gmt-offset-service/ http://gmt-offset-service:8000/gmt-offset/

Redirect /omar-avro-metadata /omar-avro-metadata/
ProxyPass /omar-avro-metadata/ http://omar-avro-metadata-app:8080/omar-avro-metadata/
ProxyPassReverse /omar-avro-metadata/ http://omar-avro-metadata-app:8080/omar-avro-metadata/

Redirect /omar-mapproxy /omar-mapproxy/
ProxyPass /omar-mapproxy/ http://omar-mapproxy:8080/
ProxyPassReverse /omar-mapproxy/ http://omar-mapproxy:8080/

Redirect /omar-turbine-server /omar-turbine-server/
ProxyPass /omar-turbine-server/ http://omar-turbine-server:8989/omar-turbine-server/
ProxyPassReverse /omar-turbine-server/ http://omar-turbine-server:8989/omar-turbine-server/

Redirect /isa-ui https://pki-omar-dev.ossim.io/isa-ui
Redirect /isa-ui/ https://pki-omar-dev.ossim.io/isa-ui/
Redirect /ossim-isa https://pki-omar-dev.ossim.io/ossim-isa
Redirect /ossim-isa/ https://pki-omar-dev.ossim.io/ossim-isa/

Redirect /nifi /nifi/
<LocationMatch "/(nifi/.*|nifi-.*)$">
    ProxyPass http://nifi:8080/$1
    RequestHeader add X-ProxyScheme "https"
    RequestHeader add X-ProxyHost "omar-dev.ossim.io"
    RequestHeader add X-ProxyPort "443"
    RequestHeader add X-ProxyContextPath "/"
    RequestHeader unset Origin

    Order deny,allow
    Allow from all
    # Authtype Basic
    # Authname "Password Required"
    # AuthUserFile /etc/httpd/htpasswd/htpasswd
    # Require valid-user

</LocationMatch>

#######################################
# o2 Openshift VirtualHost configuration
#######################################
<VirtualHost _default_:443>
 SSLEngine ON

 LogFormat "{\"apache_timestamp\": \"%{%d/%b/%Y %T}t.%{msec_frac}t %{%z}t\", \"user\": \"%{SSL_CLIENT_S_DN_CN}x\", \"email\": \"%{SSL_CLIENT_S_DN_Email}x\", \"O_0\": \"%{SSL_CLIENT_S_DN_O_0}x\", \"O_1\": \"%{SSL_CLIENT_S_DN_O_1}x\", \"OU_0\": \"%{SSL_CLIENT_S_DN_OU_0}x\", \"OU_1\": \"%{SSL_CLIENT_S_DN_OU_1}x\", \"ssl_dump\": \"%{SSL_CLIENT_S_DN}x\", \"response_time\": \"%{ms}T\", \"http_status\": \"%s\", \"request\": \"%U%q\", \"method\": \"%m\", \"protocol\": \"%H\", \"clientIp\": \"%a\"}" json_combined
 LogFormat "{\"apache_timestamp\": \"%{%d/%b/%Y %T}t.%{msec_frac}t %{%z}t\", \"user\": \"%{SSL_CLIENT_S_DN_CN}x\", \"email\": \"%{SSL_CLIENT_S_DN_Email}x\", \"O_0\": \"%{SSL_CLIENT_S_DN_O_0}x\", \"O_1\": \"%{SSL_CLIENT_S_DN_O_1}x\", \"OU_0\": \"%{SSL_CLIENT_S_DN_OU_0}x\", \"OU_1\": \"%{SSL_CLIENT_S_DN_OU_1}x\", \"ssl_dump\": \"%{SSL_CLIENT_S_DN}x\", \"response_time\": \"%{ms}T\", \"http_status\": \"%s\", \"request\": \"%U%q\", \"method\": \"%m\", \"protocol\": \"%H\", \"clientIp\": \"%{X-Forwarded-For}i\"}" json_proxy
 SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded
 CustomLog logs/ssl_access_log json_combined env=!forwarded
 CustomLog logs/ssl_access_log json_proxy env=forwarded

 SSLCertificateFile /etc/ssl/server-certs/server.pem
 SSLCertificateKeyFile /etc/ssl/server-certs/server.key
#  SSLCACertificateFile /etc/ssl/server-certs/ca.crt

</VirtualHost>

<VirtualHost _default_:80>

</VirtualHost>

################################################
# Protect locations if the htpasswd file exists
################################################
<LocationMatch "/(omar-stager|omar-sqs-stager)/dataManager/removeRaster">
    <If "-f '/etc/httpd/htpasswd/htpasswd'">
      AuthType Basic
      AuthName "Wrapper auth"
      AuthBasicProvider file
      AuthUserFile "/etc/httpd/htpasswd/htpasswd"
      Require valid-user
    </If>
</LocationMatch>

#######################################
# o2 Openshift CORS configuration
#######################################

# Allow these headers to vary in caches
Header always append Vary Access-Control-Allow-Credentials
Header always append Vary Access-Control-Allow-Methods
Header always append Vary Access-Control-Allow-Headers
Header always append Vary Access-Control-Allow-Origin
Header always append Vary Access-Control-Max-Age

# UNCOMMENT FOR PKI PROXIES
#
RequestHeader set USERNAME "%{SSL_CLIENT_S_DN_CN}s"
RequestHeader set SSL_CLIENT_S_DN "%{SSL_CLIENT_S_DN}s"
RequestHeader set SSL_CLIENT_S_CN "%{SSL_CLIENT_S_DN_CN}s"

# Inform the client CORS headers will vary based on the provided Origin
Header always append Vary Origin

# For proxypass
Header always unset Access-Control-Allow-Credentials
Header always unset Access-Control-Allow-Origin

# Header always set Access-Control-Allow-Credentials true
Header set Access-Control-Allow-Credentials true

# This is a pretty standard set, update as needed for custom requests
Header always set Access-Control-Allow-Methods "GET, PUT, POST, DELETE, OPTIONS, CANCELUPLOAD"
Header always set Access-Control-Allow-Headers "Accept, Overwrite, Destination, Content-Type, Cache-Control, Origin, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name"

# This grabs the origin from the request headers and echoes it in the Allow-Origin header
# so we can support all origins without a wildcard

SetEnvIfNoCase Origin (.*) origin_test=$1
<IfDefine origin_test>
SetEnv origin %{origin_test}
</IfDefine>
<IfDefine !origin_test>
SetEnv origin *
</IfDefine>
# Header always set Access-Control-Allow-Origin "%{origin}e"
Header set Access-Control-Allow-Origin "%{origin}e"

# This should be pretty short in the event that the user submits a cross-origin request
# from two separate origins over a short period of time. If the browser denying these
# within a short period is not acceptable, see the commented block below.
# Header always set Access-Control-Max-Age 30

# The following conditions are here to satisfy not responding to older http requests (per NESSUS 1.5.9)
RewriteEngine on
RewriteCond %{THE_REQUEST} !HTTP/1\.1$
RewriteRule .* - [F]
# Add these rewrite directives before any ProxyPass or ProxyPassReverse load balancing directives
# so the pre-flight request does not go to the balancer handler.
RewriteCond %{REQUEST_METHOD} OPTIONS
RewriteCond %{HTTP:Origin} !=""
RewriteRule ^(.*)$ $1 [R=200,L,E=HTTP_ORIGIN:%{HTTP:Origin}]

# Allow browsers to access additional response headers for cross-domain requests.
Header always set Access-Control-Expose-Headers "Content-Disposition"
